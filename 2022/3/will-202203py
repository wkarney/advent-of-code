#!/usr/bin/env python

"""
Advent of Code 2022, day 3
Will Karnasiewicz
"""
from itertools import zip_longest

# Input Data

with open("./inputs/will-input.txt") as f:
    input_list = f.read().rstrip("\n").split("\n")


# # Parts 1 and 2
def letter_to_priority(letter):
    if ord(letter) < 97:
        return ord(letter) - 38
    return ord(letter) - 96


def find_priorities_pt1(inputs):
    priorities = []
    for sack in inputs:
        letter = set(sack[: len(sack) // 2]).intersection(sack[len(sack) // 2 :]).pop()
        priorities.append(letter_to_priority(letter))
    return priorities


def grouper(iterable_obj, count, fillvalue=None):
    args = [iter(iterable_obj)] * count
    return zip_longest(*args, fillvalue=fillvalue)


def find_priorities_pt2(inputs):
    priorities = []
    for group in grouper(inputs, 3):
        letter = set(group[0]).intersection(group[1]).intersection(group[2]).pop()
        priorities.append(letter_to_priority(letter))
    return priorities


if __name__ == "__main__":
    print(f"Part 1: {sum(find_priorities_pt1(input_list))}")
    print(f"Part 2: {sum(find_priorities_pt2(input_list))}")
